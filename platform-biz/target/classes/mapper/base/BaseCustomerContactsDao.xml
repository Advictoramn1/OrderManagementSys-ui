<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.modules.base.dao.BaseCustomerContactsDao">

    <sql id="selectSql">
        SELECT
        T.ID,
        T.NAME,
        T.PHONE,
        T.COMPANY,
        T.ADDRESS,
        T.INDUSTRY_TYPE,
        T.COUNTRY,
        T.PROVINCE,
        T.CITY,
        T.AREA,
        T.TYPE,
        T.REMARK,
        T.REGISTER_USER_ID,
        T.CREATED_BY,
        T.CREATED_TIME,
        T.UPDATED_BY,
        T.UPDATED_TIME,
        T.DEL_FLAG
        FROM BASE_CUSTOMER_CONTACTS T
        WHERE 1=1 AND T.DEL_FLAG = '0'
        <if test="params.name != null and params.name.trim() != ''">
            AND T.NAME LIKE '%${params.name}%'
        </if>
        <if test="params.registerUserId != null and params.registerUserId.trim() != ''">
            AND T.REGISTER_USER_ID = #{params.registerUserId}
        </if>
        <if test="params.type != null and params.type.trim() != ''">
            AND T.TYPE = #{params.type}
        </if>
    </sql>

    <select id="selectBaseCustomerContactsPage" resultType="com.platform.modules.base.entity.BaseCustomerContactsEntity">
        SELECT
        T.ID,
        T.NAME,
        T.PHONE,
        T.COMPANY,
        T.ADDRESS,
        I.INDUSTRY_TYPE,
        T.COUNTRY,
        (SELECT NAME FROM BASE_AREA B WHERE B.ID = T.PROVINCE) AS PROVINCE,
        (SELECT NAME FROM BASE_AREA B WHERE B.ID = T.CITY) AS CITY,
        (SELECT NAME FROM BASE_AREA B WHERE B.ID = T.AREA) AS AREA,
        T.PROVINCE,
        T.CITY,
        T.AREA,
        T.TYPE,
        T.REMARK,
        T.REGISTER_USER_ID,
        T.CREATED_BY,
        T.CREATED_TIME,
        T.UPDATED_BY,
        T.UPDATED_TIME,
        T.DEL_FLAG
        FROM BASE_CUSTOMER_CONTACTS T
        INNER JOIN BASE_INDUSTRY_TYPE I ON T.INDUSTRY_TYPE = I.ID
        WHERE 1=1 AND T.DEL_FLAG = '0'
        <if test="params.name != null and params.name.trim() != ''">
            AND T.NAME LIKE '%${params.name}%'
        </if>
        <if test="params.registerUserId != null and params.registerUserId.trim() != ''">
            AND T.REGISTER_USER_ID = #{params.registerUserId}
        </if>
        <if test="params.type != null and params.type.trim() != ''">
            AND T.TYPE = #{params.type}
        </if>
    </select>

    <select id="queryAll" resultType="com.platform.modules.base.entity.BaseCustomerContactsEntity">
        SELECT
        T.ID,
        T.NAME,
        T.PHONE,
        T.COMPANY,
        T.ADDRESS,
        I.INDUSTRY_TYPE,
        T.COUNTRY,
        (SELECT NAME FROM BASE_AREA B WHERE B.ID = T.PROVINCE) AS PROVINCE,
        (SELECT NAME FROM BASE_AREA B WHERE B.ID = T.CITY) AS CITY,
        (SELECT NAME FROM BASE_AREA B WHERE B.ID = T.AREA) AS AREA,
        T.PROVINCE,
        T.CITY,
        T.AREA,
        T.TYPE,
        T.REMARK,
        T.REGISTER_USER_ID,
        T.CREATED_BY,
        T.CREATED_TIME,
        T.UPDATED_BY,
        T.UPDATED_TIME,
        T.DEL_FLAG
        FROM BASE_CUSTOMER_CONTACTS T
        INNER JOIN BASE_INDUSTRY_TYPE I ON T.INDUSTRY_TYPE = I.ID
        WHERE 1=1 AND T.DEL_FLAG = '0'
        <if test="params.name != null and params.name.trim() != ''">
            AND T.NAME LIKE '%${params.name}%'
        </if>
        <if test="params.registerUserId != null and params.registerUserId.trim() != ''">
            AND T.REGISTER_USER_ID = #{params.registerUserId}
        </if>
        <if test="params.type != null and params.type.trim() != ''">
            AND T.TYPE = #{params.type}
        </if>
        <if test="params.ids != null and params.ids.size() != 0">
            AND T.ID IN
            <foreach collection="params.ids" open="(" close=")" item="id" separator=",">
                #{id}
            </foreach>
        </if>
    </select>
</mapper>